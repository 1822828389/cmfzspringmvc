import com.baizhi.entity.User;import org.apache.poi.hssf.usermodel.HSSFWorkbook;import org.apache.poi.ss.usermodel.Cell;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.ss.usermodel.Sheet;import org.apache.poi.ss.usermodel.Workbook;import org.junit.Test;import java.io.FileInputStream;import java.lang.reflect.Field;import java.util.ArrayList;import java.util.Date;import java.util.List;/** * Created by dell on 2018/6/5. */public class testimport {    @Test    public void m1()throws Exception {        List<User> users = new ArrayList<User>();        Workbook workbook = new HSSFWorkbook(new FileInputStream("e:/工作.xls"));        Sheet sheet = workbook.getSheet("工作表");        Class<User> userClass = User.class;        Field[] field = userClass.getDeclaredFields();        System.out.println("数量"+sheet.getLastRowNum());        for (int i = 1; i <= sheet.getLastRowNum(); i++) {            User user = new User();            Row row = sheet.getRow(i);            System.out.println(i);            int j = 0;            for (Field f : field) {                Cell cell = row.getCell(j);                j++;                String methods = "set" + f.getName().substring(0, 1).toUpperCase() + f.getName().substring(1);                try {                    if (methods.equals("setId")) {                        int numericCellValue = (int) cell.getNumericCellValue();                        String s = String.valueOf(numericCellValue);                        userClass.getDeclaredMethod(methods, String.class).invoke(user, s);                    } else if (methods.equals("setRegtime")) {                        userClass.getDeclaredMethod(methods, Date.class).invoke(user, cell.getDateCellValue());                    } else {                        userClass.getDeclaredMethod(methods, String.class).invoke(user, cell.getStringCellValue());                    }                } catch (Exception e) {                    e.printStackTrace();                }            }            users.add(user);        }        for (User user : users) {            System.out.println(user);        }    }}