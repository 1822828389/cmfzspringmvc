package com.baizhi.serverInter;import com.alibaba.fastjson.JSONObject;import com.baizhi.entity.User;import com.baizhi.service.AlbumService;import com.baizhi.service.ArticalService;import com.baizhi.service.SowingmapService;import com.baizhi.service.UserService;import com.baizhi.util.GetNRandom;import com.baizhi.util.MD5Util;import com.baizhi.util.SMSUtil;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.bind.annotation.RestController;import javax.servlet.http.HttpSession;import java.util.*;/** * Created by dell on 2018/6/6. */@RestController@RequestMapping("/cmfzserver")public class CmfzServer {    @Autowired    private SowingmapService sowingmapService;    @Autowired    private AlbumService albumService;    @Autowired    private ArticalService articalService;    @Autowired    private UserService userService;    @RequestMapping("/firstpage")    @ResponseBody    public JSONObject firstPage(String uid, String type, String sub_type) {        JSONObject jsonObject = new JSONObject();        if (uid != null & type != null) {            List header = sowingmapService.queryall(0, 5);            List album1 = albumService.queryall();            List album = album1.subList(0, 3);            List artical1 = articalService.queryAll();            List artical = artical1.subList(0, 2);            if (type.equals("all")) {                jsonObject.put("header", header);                jsonObject.put("album", album);                jsonObject.put("artical", artical);                return jsonObject;            }            if (type.equals("wen")) {                jsonObject.put("album", album);                return jsonObject;            }            if (type.equals("si")) {                jsonObject.put("artical", artical);                return jsonObject;            }        }        jsonObject.put("error", -200);        jsonObject.put("errmsg", "参数格式错误");        return jsonObject;    }    @RequestMapping("/wen")    public JSONObject getWen(String id, String uid) {        JSONObject jsonObject = new JSONObject();        if (id != null & uid != null) {            List album1 = albumService.queryall();            List album = album1.subList(0, 3);            jsonObject.put("introduction", album);            return jsonObject;        }        jsonObject.put("error", -200);        jsonObject.put("errmsg", "参数格式错误");        return jsonObject;    }    @RequestMapping("/login")    public JSONObject login(String phone, String password, String code) {        JSONObject jsonObject = new JSONObject();        if (phone != null && password != null && code != null) {            User user = userService.queryByTel(phone);            System.out.println(user);            if (user == null) {                jsonObject.put("error", -201);                jsonObject.put("errmsg", "用户不存在");                return jsonObject;            } else {                password = MD5Util.md5(password);                if (user.getPassword() .equals(password) ) {                    jsonObject.put("error", -200);                    jsonObject.put("errmsg", "密码错误");                    return jsonObject;                } else {                    jsonObject.put("user", user);                    return jsonObject;                }            }        }        jsonObject.put("error", -202);        jsonObject.put("errmsg", "参数格式错误");        return jsonObject;    }    @RequestMapping("/register")    public JSONObject register(String phone, String password) {        JSONObject jsonObject = new JSONObject();        if (phone != null && password != null) {            User user = userService.queryByTel(phone);            if (user != null) {                jsonObject.put("error", -200);                jsonObject.put("errmsg", "该手机号已经存在");                return jsonObject;            } else {                User user1 = new User();                password = MD5Util.md5(password);                String id = UUID.randomUUID().toString().replace("-", "");                user1.setId(id);                user1.setTel(phone);                user1.setPassword(password);                int i = userService.registeruser(user1);                System.out.println("i=" + i);                jsonObject.put("user", user1);                return jsonObject;            }        }        jsonObject.put("error", -202);        jsonObject.put("errmsg", "参数格式错误");        return jsonObject;    }    @RequestMapping("/updateuserinformation")    public JSONObject updateuser(String uid, String gender, String photo, String location, String description, String nickname, String province, String city, String password) {        JSONObject jsonObject = new JSONObject();        User user1 = userService.queryById(uid);        if (user1 == null) {            jsonObject.put("error", -200);            jsonObject.put("errmsg", "用户不存在");            return jsonObject;        } else {            User user = new User();            user.setId(uid);            user.setPassword(MD5Util.md5(password));            user.setSex(gender);            user.setHead_pic(photo);            user.setUlocation(location);            user.setSign(description);            user.setUsername(nickname);            user.setProvince(province);            user.setCity(city);            userService.updateUsers(user);            jsonObject.put("user", userService.queryByTel(photo));        }        jsonObject.put("error", -202);        jsonObject.put("errmsg", "参数格式错误");        return jsonObject;    }    @RequestMapping("/getcode")    public JSONObject getCode(String phone, final HttpSession httpSession) {        JSONObject jsonObject = new JSONObject();        if (phone != null) {            int num = (int) (Math.random() * 8999) + 1000 + 1;            String code = String.valueOf(num);            httpSession.setAttribute("phone", phone);            httpSession.setAttribute("code", code);            System.out.println(phone + "--" + httpSession.getAttribute("code") + code);            Timer timer = new Timer();            timer.schedule(new TimerTask() {                @Override                public void run() {                    httpSession.removeAttribute("phone");                    httpSession.removeAttribute("code");                }            }, 300000);            try {                SMSUtil.sendCode(phone, code);            } catch (Exception e) {                jsonObject.put("error", -202);                jsonObject.put("errmsg", "验证码发送失败");                return jsonObject;            }            jsonObject.put("right", 202);            jsonObject.put("rightmsg", "验证码发送成功，五分钟秒有效");            return jsonObject;        } else {            jsonObject.put("error", -202);            jsonObject.put("errmsg", "参数格式错误");            return jsonObject;        }    }    @RequestMapping("/checkcode")//http://localhost:9001/cmfzserver/checkcode?phone=13717534032&code=5027    public JSONObject checkcode(String phone, String code, HttpSession httpSession) {        JSONObject jsonObject = new JSONObject();        if (phone != null && code != null) {            String phone1 = (String) httpSession.getAttribute("phone");            String code1 = (String) httpSession.getAttribute("code");            if (phone1 == null || code1 == null) {                jsonObject.put("result", "失败");                return jsonObject;            } else if (phone1.equals(phone) && code1.equals(code)) {                jsonObject.put("result", "成功");                return jsonObject;            } else {                jsonObject.put("result", "失败");                return jsonObject;            }        } else {            jsonObject.put("error", -202);            jsonObject.put("errmsg", "参数格式错误");            return jsonObject;        }    }    @RequestMapping("/getvip")    public JSONObject getVipUser(String uid) {        JSONObject jsonObject = new JSONObject();        if (uid != null) {            List<User> list = userService.queryAll();            List<User> list1 = new ArrayList<User>();            int[] fivenum = GetNRandom.GetRandoms(0, list.size() - 1, 5);            for (int i = 0; i < fivenum.length; i++) {                list1.add(list.get(fivenum[i]));            }            jsonObject.put("users",list1);            return jsonObject;        } else {            jsonObject.put("error", -202);            jsonObject.put("errmsg", "参数格式错误");            return jsonObject;        }    }}