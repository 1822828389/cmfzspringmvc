package com.baizhi.controller;import com.baizhi.entity.Album;import com.baizhi.service.AlbumService;import org.apache.commons.io.FilenameUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.multipart.MultipartFile;import javax.servlet.http.HttpServletRequest;import java.io.File;import java.io.IOException;import java.util.List;import java.util.UUID;/** * Created by dell on 2018/5/30. */@RestController@RequestMapping(value = "/album")public class AlbumController {    @Autowired    private AlbumService albumService;    @RequestMapping(value = "/queryall")    public List<Album> queryall(){        List<Album> list=albumService.queryall();        return list;    }    @PostMapping(value = "/insert")    public void insert(Album album, MultipartFile img,HttpServletRequest request){        //获取当前项目路径        String projetPath = request.getSession().getServletContext().getRealPath("/");        File file = new File(projetPath);        //web项目的路径        String webappsPath = file.getParent();        //上传文件夹的路径        File uploadPath = new File(webappsPath + "/upload");        //创建上传文件夹        if (!uploadPath.exists()) {            uploadPath.mkdir();        }        //获取原始文件名        String oldFilename = img.getOriginalFilename();        //获取后缀名        String extension = FilenameUtils.getExtension(oldFilename);        UUID uuid = UUID.randomUUID();        String newName = uuid.toString();        newName = newName + "." + extension;        try {            //上传到指定的文件夹            img.transferTo(new File(uploadPath.getPath(), newName));        } catch (IOException e) {            e.printStackTrace();        }        //2将数据存储到数据库        String str = UUID.randomUUID().toString();        String id = str.replace("-", "");        album.setId(id);        album.setPublishtime(album.getUploadtime());        album.setCoverimage(img.getOriginalFilename());        album.setNewname(newName);        albumService.insertAlbum(album);    }    @RequestMapping(value = "/queryone")    public Album queryOne(String id){        return albumService.queryAlbumbyid(id);    }    @RequestMapping(value = "/updatecount")    public void updateCount(Album album){        albumService.updateCount(album);    }}