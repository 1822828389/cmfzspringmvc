package com.baizhi.controller;import com.baizhi.entity.Music;import com.baizhi.service.AlbumService;import com.baizhi.service.MusicService;import org.apache.commons.io.FileUtils;import org.apache.commons.io.FilenameUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.multipart.MultipartFile;import javax.servlet.ServletOutputStream;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.File;import java.io.IOException;import java.io.UnsupportedEncodingException;import java.util.UUID;/** * Created by dell on 2018/5/30. */@RestController@RequestMapping(value = "/music")public class MusicController {    @Autowired    private MusicService musicService;    @Autowired    private AlbumService albumService;    @RequestMapping(value = "/insert")    public void insert(Music music, MultipartFile musicfile, HttpServletRequest request){        System.out.println(music);        //获取当前项目路径        String projetPath = request.getSession().getServletContext().getRealPath("/");        File file = new File(projetPath);        //web项目的路径        String webappsPath = file.getParent();        //上传文件夹的路径        File uploadPath = new File(webappsPath + "/upload");        //创建上传文件夹        if (!uploadPath.exists()) {            uploadPath.mkdir();        }        //获取原始文件名        String oldFilename = musicfile.getOriginalFilename();        //获取后缀名        String extension = FilenameUtils.getExtension(oldFilename);        UUID uuid = UUID.randomUUID();        String newName = uuid.toString();        newName = newName + "." + extension;        try {            //上传到指定的文件夹            musicfile.transferTo(new File(uploadPath.getPath(), newName));        } catch (IOException e) {            e.printStackTrace();        }        //2将数据存储到数据库        String str = UUID.randomUUID().toString();        String id = str.replace("-", "");        music.setId(id);        music.setPath(oldFilename);        music.setUrl(newName);        String pic= albumService.queryAlbumbyid(music.getAlbum_id()).getNewname();        music.setPic(pic);        musicService.insertmusic(music);    }    @ResponseBody    @RequestMapping("/down")    public void down(String url, String name, HttpServletResponse response, HttpServletRequest request) {        //     文件存储位置          url:/audio/b0879e48-fb84-4e93-b0e2-faaaee297f9f.mp3         歌曲.mp3        System.out.println(url);        System.out.println(name);        String projectPath = request.getSession().getServletContext().getRealPath("/");        File file = new File(projectPath);        String webappsPath = file.getParent();        System.out.println(webappsPath);        String filePath = webappsPath +"\\upload\\"+ url;        System.out.println(filePath);        File downFile = new File(filePath);        //设置响应头 响应类型        String fileName = null;        try {            fileName = new String(name.getBytes("UTF-8"), "ISO8859-1");        } catch (UnsupportedEncodingException e) {            e.printStackTrace();        }        response.setHeader("content-disposition", "attachment;fileName=" + fileName);        response.setContentType("audio/mpeg");        //响应出去        try {            ServletOutputStream outputStream = response.getOutputStream();            outputStream.write(FileUtils.readFileToByteArray(downFile));        } catch (IOException e) {            e.printStackTrace();        }    }}